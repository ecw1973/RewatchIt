@page "/test"
@using RewatchIt.Services
@using RewatchIt.Data
@inject JsonFileMovieService MovieService

<h1>Movies</h1>

<RadzenButton Click=@(args => Show()) Text="Show" Style="margin-bottom: 20px; width: 150px"/>
<RadzenButton Click=@(args => Hide()) Text="Hide" Style="margin-bottom: 20px; width: 150px"/>

@code
{
    IEnumerable<Movie> movies;
    List<TmdbMovie> tmdbMovies = new List<TmdbMovie>();
    RadzenDataGrid<TmdbMovie> Grid = new RadzenDataGrid<TmdbMovie>();

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task Show()
    {
        //await Task.Run(async () =>
        //{
        //int findMovieCount = await MovieService.FindMovieCount();
        int findMovieCount = 25;

        for (int i = 1; i <= findMovieCount; i++)
        {
            //tmdbMovies = await MovieService.GetMovies(1);
            List<TmdbMovie> result = await MovieService.GetMovies(i);
            tmdbMovies.AddRange(result);
            await Grid.Reload();
        }
        //});

    }

    private void Hide()
    {
        Grid.Reload();
    }
}

@*@{
    foreach (var movie in tmdbMovies)
    {
    <li>@movie.Title</li>
    }
}*@


@{
        <RadzenDataGrid @ref="Grid" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="10"
                        AllowPaging="true" AllowSorting="true" Data="@tmdbMovies" TItem="TmdbMovie"
                        ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
            <Columns>
                <RadzenDataGridColumn TItem="TmdbMovie" Property="Title" Title="Title"/>
                <RadzenDataGridColumn TItem="TmdbMovie" Property="ReleaseDate" Title="ReleaseDate" Width="20"/>
            </Columns>
        </RadzenDataGrid>
}