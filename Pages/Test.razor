@page "/test"
@using RewatchIt.Services
@using RewatchIt.Data
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@using TextAlign = Syncfusion.Blazor.Grids.TextAlign
@inject TmdbService MovieService
@inject DialogService DialogService

<h1>Movies</h1>

<SfButton @onclick="() => ExecuteQuery(1986)">Query</SfButton>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid @ref="movieGrid" DataSource="@tmdbMovieList" AllowPaging="true">
                <GridColumns>
                    <GridColumn Field=@nameof(TmdbMovie.Title) HeaderText="Title" TextAlign="TextAlign.Center" Width="120">
                        <Template>
                            @{
                                TmdbMovie selectedMovie = (TmdbMovie)context;
                                <SfButton CssClass="e-outline" @onclick="() => ShowDetails(selectedMovie.Id, selectedMovie.Title)">@selectedMovie.Title</SfButton>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TmdbMovie.ReleaseDate) Format="d" HeaderText="Release Date" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(TmdbMovie.VoteCount) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@{
    if (IsMovieDetailsDialogVisible)
    {
        <SfDialog @bind-Visible="@IsMovieDetailsDialogVisible" AllowDragging="true" IsModal="true" Width="640px" Height="550px" ShowCloseIcon="true">
            <DialogTemplates>
                <Content>
                    <TmdbMovieCard MovieId="@SelectedMovieId" />
                </Content>
            </DialogTemplates>
            <DialogAnimationSettings Effect="@DialogEffect.Zoom"></DialogAnimationSettings>
        </SfDialog>
    }
}

@code
{
    readonly List<TmdbMovie> tmdbMovieList = new List<TmdbMovie>();
    SfGrid<TmdbMovie> movieGrid;

    bool IsMovieDetailsDialogVisible { get; set; }
    private int SelectedMovieId { get; set; }
    private string SelectedMovieTitle { get; set; }

    private async Task ExecuteQuery(int queryYear)
    {
        int moviePageCount = await MovieService.GetMoviePageCount(queryYear);
        if (moviePageCount > 10)
        {
            moviePageCount = 10;
        }

        for (int page = 1; page <= moviePageCount; page++)
        {
            List<TmdbMovie> result = await MovieService.GetMovies(page, queryYear);
            tmdbMovieList.AddRange(result);
            movieGrid.Refresh();
        }
    }

    void ShowDetails(int movieId, string movieTitle)
    {
        SelectedMovieId = movieId;
        SelectedMovieTitle = movieTitle;
        IsMovieDetailsDialogVisible = true;
    }

}

